<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- Group ID is often used to tell you who wrote certain -->
    <groupId>edu.asu.transcend</groupId>
    <!-- artifactID is most often the name of the program -->
    <artifactId>diamonds</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- Using a Parent POM to Make this code easier to maintain and modify -->
    <parent>
        <groupId>edu.asu.transcend</groupId>
        <artifactId>object-oriented-java-parent</artifactId>
        <version>LATEST</version>
        <relativePath>../parent-pom.xml</relativePath>
    </parent>
    <!--
     properties let us manage variables used in the POM. So if I want to change my main
    class, I can do it here in <properties> and not go hunting for it below where the property is used instead.
    -->
    <properties>
        <jar.mainClass>edu.transcend.diamonds.Main</jar.mainClass>
    </properties>
    <!--
    Here in the <build> tag, we add extra configuration and plugins to change the behavior of Maven's default build.
    -->
    <build>
        <!-- Because of the use of a Parent POM with these plugins configured in <PluginManagement> we
        can use those configurations by just declaring the plugins.
        -->
        <plugins>
            <!--
            Dependency plugin will bundle all dependencies into a "lib" folder prior to "package" lifecycle goal.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <!--
            Maven Jar plugin will add the "lib" folder to the classpath. *Note: Dependencies are in lib, not in the jar
            Specifies the Main Class attribute on the Manifest.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>